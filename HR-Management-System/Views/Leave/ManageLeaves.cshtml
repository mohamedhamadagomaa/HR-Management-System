@model IEnumerable<LeaveRequest>
@{
    ViewData["Title"] = "Leave Management";
    var pendingCount = Model.Count(lr => lr.Status == "Pending");
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-4 border-bottom">
    <h1 class="h2">
        <i class="fas fa-tasks me-2"></i>Leave Management
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <span class="badge bg-warning me-2">@pendingCount Pending</span>
        <a href="/Leave/Manage" class="btn btn-info me-2">
            <i class="fas fa-chart-bar me-1"></i>View Balances
        </a>
    </div>
</div>

<!-- Quick Stats -->
<div class="row mb-4">
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Requests
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count()</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-list fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Pending
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@pendingCount</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clock fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Approved
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(lr => lr.Status == "Approved")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-danger shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                            Rejected
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(lr => lr.Status == "Rejected")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-times-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Annual Leave
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(lr => lr.LeaveType == "Annual")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-umbrella-beach fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-2 col-md-4 mb-4">
        <div class="card border-left-secondary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-secondary text-uppercase mb-1">
                            Sick Leave
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(lr => lr.LeaveType == "Sick")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-first-aid fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (!Model.Any())
{
    <div class="text-center py-5">
        <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No Leave Requests</h4>
        <p class="text-muted">No leave requests have been submitted yet.</p>
    </div>
}
else
{
    <!-- Filter Tabs -->
    <ul class="nav nav-tabs mb-4" id="leaveTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">
                Pending <span class="badge bg-warning ms-1">@pendingCount</span>
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button" role="tab">
                All Requests <span class="badge bg-primary ms-1">@Model.Count()</span>
            </button>
        </li>
    </ul>

    <div class="tab-content" id="leaveTabsContent">
        <!-- Pending Tab -->
        <div class="tab-pane fade show active" id="pending" role="tabpanel">
            @await Html.PartialAsync("_PendingLeavesPartial", Model.Where(lr => lr.Status == "Pending"))
        </div>

        <!-- All Requests Tab -->
        <div class="tab-pane fade" id="all" role="tabpanel">
            <div class="card">
                <div class="card-header bg-white">
                    <h5 class="card-title mb-0">All Leave Requests</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="allLeavesTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Employee</th>
                                    <th>Department</th>
                                    <th>Period</th>
                                    <th>Type</th>
                                    <th>Days</th>
                                    <th>Reason</th>
                                    <th>Status</th>
                                    <th>Applied</th>
                                    <th>Balance</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var request in Model.OrderByDescending(r => r.CreatedAt))
                                {
                                    var days = (request.EndDate - request.StartDate).Days + 1;
                                    var statusClass = request.Status switch
                                    {
                                        "Approved" => "success",
                                        "Rejected" => "danger",
                                        _ => "warning"
                                    };
                                    var canApprove = request.Status == "Pending";

                                    <tr>
                                        <td>
                                            <strong>@request.Employee.Name</strong>
                                            <br>
                                            <small class="text-muted">@request.Employee.Position</small>
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@request.Employee.Department</span>
                                        </td>
                                        <td>
                                            @request.StartDate.ToString("MMM dd") - @request.EndDate.ToString("MMM dd")
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@request.LeaveType</span>
                                        </td>
                                        <td>
                                            <span class="fw-bold">@days</span>
                                        </td>
                                        <td>
                                            <span class="d-inline-block text-truncate" style="max-width: 150px;"
                                                  title="@request.Reason">
                                                @request.Reason
                                            </span>
                                        </td>
                                        <td>
                                            <span class="badge bg-@statusClass">@request.Status</span>
                                        </td>
                                        <td>@request.CreatedAt.ToString("MMM dd")</td>
                                        <td>
                                            <span class="fw-bold @(request.Employee.LeaveBalance < 5 ? "text-danger" : "text-success")">
                                                @request.Employee.LeaveBalance
                                            </span>
                                        </td> 
                                        <td>
                                            @if (canApprove)
                                            {
                                                <div class="btn-group btn-group-sm">
                                                    <button class="btn btn-success"
                                                            onclick="approveLeave(@request.Id, '@request.Employee.Name', @days, '@request.LeaveType')">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                    <button class="btn btn-danger"
                                                            onclick="rejectLeave(@request.Id, '@request.Employee.Name')">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Processed</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#allLeavesTable').DataTable({
                "order": [[7, "desc"]], // Sort by Applied date
                "responsive": true,
                "pageLength": 25
            });

            // Initialize tabs
            var triggerTabList = [].slice.call(document.querySelectorAll('#leaveTabs button'))
            triggerTabList.forEach(function (triggerEl) {
                var tabTrigger = new bootstrap.Tab(triggerEl)
                triggerEl.addEventListener('click', function (event) {
                    event.preventDefault()
                    tabTrigger.show()
                })
            });
        });

        function approveLeave(leaveId, employeeName, days, leaveType) {
            var comments = prompt(`Enter comments for approving ${days} days of ${leaveType} leave for ${employeeName}:`, "Approved");
            if (comments !== null) {
                $.ajax({
                    url: '/Leave/Approve',
                    type: 'POST',
                    data: {
                        id: leaveId,
                        comments: comments
                    },
                    success: function(response) {
                        if (response.success) {
                            alert('Leave approved successfully!');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error approving leave: ' + error);
                    }
                });
            }
        }

        function rejectLeave(leaveId, employeeName) {
            var comments = prompt(`Enter reason for rejecting leave for ${employeeName}:`, "Not approved");
            if (comments !== null) {
                $.ajax({
                    url: '/Leave/Reject',
                    type: 'POST',
                    data: {
                        id: leaveId,
                        comments: comments
                    },
                    success: function(response) {
                        if (response.success) {
                            alert('Leave rejected!');
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function(xhr, status, error) {
                        alert('Error rejecting leave: ' + error);
                    }
                });
            }
        }
    </script>
}