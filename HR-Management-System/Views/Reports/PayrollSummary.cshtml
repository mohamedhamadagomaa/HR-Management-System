@model PayrollSummaryReport
@{
    ViewData["Title"] = "Payroll Summary Report";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-4 border-bottom">
    <h1 class="h2">
        <i class="fas fa-money-bill-wave me-2"></i>Payroll Summary Report
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <a href="/Reports" class="btn btn-secondary me-2">
            <i class="fas fa-arrow-left me-1"></i>Back to Reports
        </a>
        <button class="btn btn-success" onclick="exportPayrollReport()">
            <i class="fas fa-file-excel me-1"></i>Export to Excel
        </button>
    </div>
</div>

<!-- Payroll Overview -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Employees
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalEmployees</div>
                        <div class="mt-2 text-success">
                            <small>Processed: @Model.ProcessedEmployees</small>
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Total Base Salary
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.TotalBaseSalary.ToString("N2")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-money-bill fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Total Allowances
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.TotalAllowances.ToString("N2")</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-plus-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Total Net Pay
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">$@Model.TotalNetPay.ToString("N2")</div>
                        <div class="mt-2 text-danger">
                            <small>Deductions: $@Model.TotalDeductions.ToString("N2")</small>
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-wallet fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Payroll Distribution Charts -->
<div class="row mb-4">
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">Payroll Cost by Department</h5>
            </div>
            <div class="card-body">
                <canvas id="payrollCostChart" height="250"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card">
            <div class="card-header bg-white">
                <h5 class="card-title mb-0">Employee Distribution</h5>
            </div>
            <div class="card-body">
                <canvas id="employeeDistributionChart" height="250"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Department Payroll Breakdown -->
<div class="card">
    <div class="card-header bg-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-building me-2"></i>Department-wise Payroll Breakdown
        </h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover" id="payrollTable">
                <thead class="table-dark">
                    <tr>
                        <th>Department</th>
                        <th>Total Employees</th>
                        <th>Processed</th>
                        <th>Total Base Salary</th>
                        <th>Avg. Salary</th>
                        <th>Total Cost</th>
                        <th>Cost per Employee</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var dept in Model.PayrollByDepartment)
                    {
                        var avgSalary = dept.EmployeeCount > 0 ? dept.TotalSalary / dept.EmployeeCount : 0;
                        var costPerEmployee = dept.ProcessedCount > 0 ? dept.TotalSalary / dept.ProcessedCount : 0;

                        <tr>
                            <td>
                                <strong>@dept.Department</strong>
                            </td>
                            <td>@dept.EmployeeCount</td>
                            <td>
                                <span class="badge @(dept.ProcessedCount == dept.EmployeeCount ? "bg-success" : "bg-warning")">
                                    @dept.ProcessedCount/@dept.EmployeeCount
                                </span>
                            </td>
                            <td>$@dept.TotalSalary.ToString("N2")</td>
                            <td>$@avgSalary.ToString("N2")</td>
                            <td>
                                <strong class="text-primary">$@dept.TotalSalary.ToString("N2")</strong>
                            </td>
                            <td>$@costPerEmployee.ToString("N2")</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="table-light">
                    <tr>
                        <td><strong>Total</strong></td>
                        <td><strong>@Model.TotalEmployees</strong></td>
                        <td><strong>@Model.ProcessedEmployees</strong></td>
                        <td><strong>$@Model.TotalBaseSalary.ToString("N2")</strong></td>
                        <td><strong>$@((Model.TotalBaseSalary / Model.TotalEmployees).ToString("N2"))</strong></td>
                        <td><strong class="text-success">$@((Model.TotalBaseSalary + Model.TotalAllowances).ToString("N2"))</strong></td>
                        <td><strong>$@((Model.TotalNetPay / Model.ProcessedEmployees).ToString("N2"))</strong></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable
            $('#payrollTable').DataTable({
                "order": [[5, "desc"]],
                "responsive": true,
                "footerCallback": function (row, data, start, end, display) {
                    // Footer calculations are handled in the view
                }
            });

            loadPayrollCharts();
        });

        function loadPayrollCharts() {
            // Payroll Cost by Department
            const costCtx = document.getElementById('payrollCostChart').getContext('2d');
            const costData = {
                labels: [@Html.Raw(string.Join(", ", Model.PayrollByDepartment.Select(x => $"'{x.Department}'")))],
                datasets: [{
                    label: 'Total Salary Cost',
                    data: [@string.Join(", ", Model.PayrollByDepartment.Select(x => x.TotalSalary))],
                    backgroundColor: '#4e73df',
                    borderColor: '#2e59d9',
                    borderWidth: 1
                }]
            };

            new Chart(costCtx, {
                type: 'bar',
                data: costData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });

            // Employee Distribution
            const distCtx = document.getElementById('employeeDistributionChart').getContext('2d');
            const distData = {
                labels: [@Html.Raw(string.Join(", ", Model.PayrollByDepartment.Select(x => $"'{x.Department}'")))],
                datasets: [{
                    data: [@string.Join(", ", Model.PayrollByDepartment.Select(x => x.EmployeeCount))],
                    backgroundColor: [
                        '#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b',
                        '#858796', '#5a5c69', '#2e59d9', '#17a673', '#2c9faf'
                    ]
                }]
            };

            new Chart(distCtx, {
                type: 'pie',
                data: distData,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
        }

        function exportPayrollReport() {
            // Simple export functionality
            const period = '@Model.PayPeriod.ToString("MMMM yyyy")';
            alert(`Payroll report for ${period} would be exported to Excel with all department breakdowns.`);
        }
    </script>
}